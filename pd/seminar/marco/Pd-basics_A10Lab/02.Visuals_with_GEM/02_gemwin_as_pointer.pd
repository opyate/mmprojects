#N canvas 698 137 451 404 10;
#X obj 74 352 gemwin;
#X obj 18 20 cnv 15 400 40 empty empty gemwin_as_pointer 20 17 0 24
-228856 -66577 0;
#X msg 74 284 create;
#X obj 312 353 gemwin;
#X msg 312 285 destroy;
#X obj 18 71 cnv 15 400 70 empty empty empty 20 17 0 24 -228856 -66577
0;
#X obj 18 212 cnv 15 400 60 empty empty empty 20 17 0 24 -261234 -66577
0;
#X text 26 71 Gem is based on OpenGL \, which uses the graphics card
to do the processing. That means that instead of directly controlling
the data like you do with Pd messages or audio \, in Gem you are controlling
a "pointer" to the data on the video card.;
#X text 29 154 [gemwin] is a pointer to the output buffer of your video
card. The screen you are looking at is that output buffer drawn to
the screen.;
#X text 28 212 So even if there are multiple [gemwin] objects \, there
is only one screen. Each [gemwin] object is then a pointer to the same
window.;
#X connect 2 0 0 0;
#X connect 4 0 3 0;
