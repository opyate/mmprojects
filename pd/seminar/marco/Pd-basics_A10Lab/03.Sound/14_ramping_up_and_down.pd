#N canvas 414 108 742 597 10;
#X declare -lib rradical;
#X obj 453 56 import rradical;
#X obj 453 24 pddp/dsp;
#X obj 21 18 cnv 15 400 40 empty empty Ramping_up_and_down 20 17 0
24 -228856 -66577 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-line 44100 float 0;
#X coords 0 1 44100 -1 200 140 1;
#X restore 398 240 graph;
#X text 400 206 this array shows one second:;
#X obj 191 301 cnv 15 100 60 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 188 439 ezdac~;
#X obj 223 323 line~;
#X obj 81 393 tabwrite~ \$0-line;
#X obj 81 277 trigger bang anything;
#X obj 223 393 *~;
#X obj 239 372 osc~ 250;
#X msg 81 149 1 1000;
#X msg 100 172 0 1000;
#X msg 119 195 1 100;
#X msg 138 218 0 100;
#X text 156 148 ramp to 1 in 1 second;
#X text 174 172 ramp to 0 in 1 second;
#X text 194 194 ramp to 1 in 100 ms;
#X text 212 218 ramp to 0 in 100 ms;
#X obj 21 68 cnv 15 400 40 empty empty empty 20 17 0 24 -228856 -66577
0;
#X text 33 67 The [line] and [line~] objects generate ramps. Ramps
are useful when you want to have a smooth transition from one thing
to another.;
#X connect 7 0 8 0;
#X connect 7 0 10 0;
#X connect 9 0 8 0;
#X connect 9 1 7 0;
#X connect 10 0 6 1;
#X connect 10 0 6 0;
#X connect 11 0 10 1;
#X connect 12 0 9 0;
#X connect 13 0 9 0;
#X connect 14 0 9 0;
#X connect 15 0 9 0;
